{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATM\\\\Desktop\\\\Dash\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport jsonData from \"../db/db.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myData = JSON.parse(JSON.stringify(jsonData));\n\nconst Dashboard = () => {\n  _s();\n\n  const [allRecords, setAllRecords] = useState([]);\n  const [data, setData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n\n  const fetchInventory = () => {\n    console.log(myData);\n    setAllRecords(myData.posts);\n    setData(myData.posts);\n  };\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [inExpandMode, setInExpandMode] = useState({\n    status: false,\n    rowKey: null\n  });\n\n  const sortData = () => {\n    const oldData = JSON.parse(JSON.stringify(data));\n    let sorteddata = oldData.sort((a, b) => a.name > b.name ? 1 : -1);\n    console.log(\"sort................\");\n    setAllRecords(sorteddata);\n    setData(sorteddata);\n  };\n\n  const decData = () => {\n    const oldData = JSON.parse(JSON.stringify(data));\n    let sorteddata = oldData.sort((a, b) => b.name > a.name ? 1 : -1);\n    console.log(\"sort................\");\n    setAllRecords(sorteddata);\n    setData(sorteddata);\n  };\n\n  const ascId = () => {\n    const oldData = JSON.parse(JSON.stringify(data));\n    let sorteddata = oldData.sort((a, b) => a.name > b.name ? 1 : -1);\n    setAllRecords(sorteddata);\n    setData(sorteddata);\n  };\n\n  const decId = () => {\n    const oldData = JSON.parse(JSON.stringify(data));\n    let sorteddata = oldData.sort((a, b) => b.name > a.name ? 1 : -1);\n    setAllRecords(sorteddata);\n    setData(sorteddata);\n  };\n  /**\r\n   *\r\n   * @param id - The id of the website\r\n   * @param  currentName - the current name of website\r\n   * @param currentEmail - the current email of website\r\n   * @param currentUsername - the current username of website\r\n   * @param currentWebsite - The current webaddress of the website\r\n   */\n\n\n  const onEdit = _ref => {\n    let {\n      id,\n      currentName,\n      currentEmail,\n      currentUsername,\n      currentWebsite\n    } = _ref;\n    setInEditMode({\n      status: true,\n      rowKey: id\n    });\n    setName(currentName);\n    setEmail(currentEmail);\n    setUsername(currentUsername);\n    setWebsite(currentWebsite);\n  };\n\n  const toggleRow = id => {\n    setInExpandMode({\n      status: true,\n      rowKey: id\n    });\n  };\n  /**\r\n   *\r\n   * @param id\r\n   * @param newName\r\n   * @param newEmail\r\n   * @param newUsername\r\n   * @param newWebsite\r\n   \r\n   */\n\n\n  const updateInventory = _ref2 => {\n    let {\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    } = _ref2;\n    const updatedReports = allRecords.map(el => {\n      if (el.id === id) {\n        return { ...el,\n          name: newName,\n          email: newEmail,\n          username: newUsername,\n          website: newWebsite\n        };\n      }\n\n      return el;\n    });\n    setAllRecords(updatedReports);\n    setData(updatedReports);\n    setInEditMode({\n      status: false,\n      rowKey: id\n    });\n    console.log(updatedReports);\n  };\n  /**\r\n   *\r\n   * @param id -The id of the website\r\n   * @param newName - The new name  of the website\r\n   * @param newEmail - The new email  of the website\r\n   * @param newUsername - The new username  of the website\r\n   * @param newWebsite - The new webaddress  of the website\r\n   */\n\n\n  const onSave = _ref3 => {\n    let {\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    } = _ref3;\n    updateInventory({\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    });\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the  state value\n\n    setName(null);\n    setEmail(null);\n    setUsername(null);\n    setWebsite(null);\n  };\n\n  const loadData = type => {\n    let tableData = [];\n\n    if (type === \"all\") {\n      tableData = allRecords.filter(data => data.type === \"application\" || data.type === \"vendor\");\n    } else if (type === \"app\") {\n      tableData = allRecords.filter(data => data.type === \"application\");\n    } else if (type === \"vendor\") {\n      tableData = allRecords.filter(data => data.type === \"vendor\");\n    }\n\n    setData(tableData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col main mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-3 mb-3 text-secondary\",\n          children: \"All Records of Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            loadData(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"app\",\n            children: \"Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vendor\",\n            children: \"Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"thead-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"No \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: sortData,\n                    class: \"fa fa-sort-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: decData,\n                    class: \"fa fa-sort-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this), \"Name\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: sortData,\n                    class: \"fa fa-sort-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: decData,\n                    class: \"fa fa-sort-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this), \"Email\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: sortData,\n                    class: \"fa fa-sort-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: decData,\n                    class: \"fa fa-sort-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this), \"Username\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: sortData,\n                    class: \"fa fa-sort-up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    onClick: decData,\n                    class: \"fa fa-sort-down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this), \"Comapny Name\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => toggleRow(item.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: name,\n                      onChange: event => setName(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this) : item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: email,\n                      onChange: event => setEmail(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 27\n                    }, this) : item.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: username,\n                      onChange: event => setUsername(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 27\n                    }, this) : item.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: website,\n                      onChange: event => setWebsite(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 27\n                    }, this) : item.website\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn-success\",\n                        onClick: () => onSave({\n                          id: item.id,\n                          newName: name,\n                          newEmail: email,\n                          newUsername: username,\n                          newWebsite: website\n                        }),\n                        children: \"Save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn-secondary\",\n                        style: {\n                          marginLeft: 8\n                        },\n                        onClick: () => onCancel(),\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-primary\",\n                      onClick: () => onEdit({\n                        id: item.id,\n                        currentName: item.name,\n                        currentEmail: item.email,\n                        currentUsername: item.username,\n                        currentWebsite: item.website\n                      }),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), inExpandMode.status && inExpandMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: id => toggleRow(id),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Tim Saudhe\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"tim@yahoo.com\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"tim\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"team.org.in\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this) : \"\"]\n              }, item.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"lgzXOY5ZiVuIEwwJ3234tGUbCHo=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ATM/Desktop/Dash/src/components/Dashboard.js"],"names":["React","useEffect","useState","jsonData","myData","JSON","parse","stringify","Dashboard","allRecords","setAllRecords","data","setData","name","setName","email","setEmail","username","setUsername","website","setWebsite","fetchInventory","console","log","posts","inEditMode","setInEditMode","status","rowKey","inExpandMode","setInExpandMode","sortData","oldData","sorteddata","sort","a","b","decData","ascId","decId","onEdit","id","currentName","currentEmail","currentUsername","currentWebsite","toggleRow","updateInventory","newName","newEmail","newUsername","newWebsite","updatedReports","map","el","onSave","onCancel","loadData","type","tableData","filter","e","target","value","item","event","marginLeft"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport jsonData from \"../db/db.json\";\r\n\r\nconst myData = JSON.parse(JSON.stringify(jsonData));\r\n\r\nconst Dashboard = () => {\r\n  const [allRecords, setAllRecords] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n\r\n  const fetchInventory = () => {\r\n    console.log(myData);\r\n    setAllRecords(myData.posts);\r\n    setData(myData.posts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInventory();\r\n  }, []);\r\n\r\n  const [inEditMode, setInEditMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n  const [inExpandMode, setInExpandMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n  const sortData = () => {\r\n    const oldData = JSON.parse(JSON.stringify(data));\r\n    let sorteddata = oldData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    console.log(\"sort................\");\r\n    setAllRecords(sorteddata);\r\n    setData(sorteddata);\r\n  };\r\n  const decData = () => {\r\n    const oldData = JSON.parse(JSON.stringify(data));\r\n    let sorteddata = oldData.sort((a, b) => (b.name > a.name ? 1 : -1));\r\n    console.log(\"sort................\");\r\n    setAllRecords(sorteddata);\r\n    setData(sorteddata);\r\n  };\r\n  const ascId = () => {\r\n    const oldData = JSON.parse(JSON.stringify(data));\r\n    let sorteddata = oldData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n    setAllRecords(sorteddata);\r\n    setData(sorteddata);\r\n  };\r\n  const decId = () => {\r\n    const oldData = JSON.parse(JSON.stringify(data));\r\n    let sorteddata = oldData.sort((a, b) => (b.name > a.name ? 1 : -1));\r\n    setAllRecords(sorteddata);\r\n    setData(sorteddata);\r\n  };\r\n  /**\r\n   *\r\n   * @param id - The id of the website\r\n   * @param  currentName - the current name of website\r\n   * @param currentEmail - the current email of website\r\n   * @param currentUsername - the current username of website\r\n   * @param currentWebsite - The current webaddress of the website\r\n   */\r\n  const onEdit = ({\r\n    id,\r\n    currentName,\r\n    currentEmail,\r\n    currentUsername,\r\n    currentWebsite,\r\n  }) => {\r\n    setInEditMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n    setName(currentName);\r\n    setEmail(currentEmail);\r\n    setUsername(currentUsername);\r\n    setWebsite(currentWebsite);\r\n  };\r\n\r\n  const toggleRow = (id) => {\r\n    setInExpandMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @param newName\r\n   * @param newEmail\r\n   * @param newUsername\r\n   * @param newWebsite\r\n   \r\n   */\r\n  const updateInventory = ({\r\n    id,\r\n    newName,\r\n    newEmail,\r\n    newUsername,\r\n    newWebsite,\r\n  }) => {\r\n    const updatedReports = allRecords.map((el) => {\r\n      if (el.id === id) {\r\n        return {\r\n          ...el,\r\n          name: newName,\r\n          email: newEmail,\r\n          username: newUsername,\r\n          website: newWebsite,\r\n        };\r\n      }\r\n      return el;\r\n    });\r\n\r\n    setAllRecords(updatedReports);\r\n    setData(updatedReports);\r\n    setInEditMode({\r\n      status: false,\r\n      rowKey: id,\r\n    });\r\n    console.log(updatedReports);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param id -The id of the website\r\n   * @param newName - The new name  of the website\r\n   * @param newEmail - The new email  of the website\r\n   * @param newUsername - The new username  of the website\r\n   * @param newWebsite - The new webaddress  of the website\r\n   */\r\n  const onSave = ({ id, newName, newEmail, newUsername, newWebsite }) => {\r\n    updateInventory({ id, newName, newEmail, newUsername, newWebsite });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    // reset the inEditMode state value\r\n    setInEditMode({\r\n      status: false,\r\n      rowKey: null,\r\n    });\r\n    // reset the  state value\r\n    setName(null);\r\n    setEmail(null);\r\n    setUsername(null);\r\n    setWebsite(null);\r\n  };\r\n\r\n  const loadData = (type) => {\r\n    let tableData = [];\r\n    if (type === \"all\") {\r\n      tableData = allRecords.filter(\r\n        (data) => data.type === \"application\" || data.type === \"vendor\"\r\n      );\r\n    } else if (type === \"app\") {\r\n      tableData = allRecords.filter((data) => data.type === \"application\");\r\n    } else if (type === \"vendor\") {\r\n      tableData = allRecords.filter((data) => data.type === \"vendor\");\r\n    }\r\n    setData(tableData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"col main mt-3\">\r\n      <div className=\"row \">\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <h5 className=\"mt-3 mb-3 text-secondary\">All Records of Employees</h5>\r\n          <select\r\n            onChange={(e) => {\r\n              loadData(e.target.value);\r\n            }}\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"app\">Application</option>\r\n            <option value=\"vendor\">Vendor</option>\r\n          </select>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>No </th>\r\n                  <th>\r\n                    <i onClick={sortData} class=\"fa fa-sort-up\"></i>\r\n                    <i onClick={decData} class=\"fa fa-sort-down\"></i>Name{\" \"}\r\n                  </th>\r\n                  <th>\r\n                    <i onClick={sortData} class=\"fa fa-sort-up\"></i>\r\n                    <i onClick={decData} class=\"fa fa-sort-down\"></i>Email{\" \"}\r\n                  </th>\r\n                  <th>\r\n                    <i onClick={sortData} class=\"fa fa-sort-up\"></i>\r\n                    <i\r\n                      onClick={decData}\r\n                      class=\"fa fa-sort-down\"\r\n                    ></i>Username{\" \"}\r\n                  </th>\r\n                  <th>\r\n                    <i onClick={sortData} class=\"fa fa-sort-up\"></i>\r\n                    <i onClick={decData} class=\"fa fa-sort-down\"></i>Comapny\r\n                    Name{\" \"}\r\n                  </th>\r\n                  <th>Edit</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((item) => (\r\n                  <React.Fragment key={item.name}>\r\n                    <tr onClick={() => toggleRow(item.id)}>\r\n                      <td>{item.id}</td>\r\n                      <td>\r\n                        {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                          <input\r\n                            value={name}\r\n                            onChange={(event) => setName(event.target.value)}\r\n                          />\r\n                        ) : (\r\n                          item.name\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                          <input\r\n                            value={email}\r\n                            onChange={(event) => setEmail(event.target.value)}\r\n                          />\r\n                        ) : (\r\n                          item.email\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                          <input\r\n                            value={username}\r\n                            onChange={(event) =>\r\n                              setUsername(event.target.value)\r\n                            }\r\n                          />\r\n                        ) : (\r\n                          item.username\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                          <input\r\n                            value={website}\r\n                            onChange={(event) => setWebsite(event.target.value)}\r\n                          />\r\n                        ) : (\r\n                          item.website\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                          <React.Fragment>\r\n                            <button\r\n                              className={\"btn-success\"}\r\n                              onClick={() =>\r\n                                onSave({\r\n                                  id: item.id,\r\n                                  newName: name,\r\n                                  newEmail: email,\r\n                                  newUsername: username,\r\n                                  newWebsite: website,\r\n                                })\r\n                              }\r\n                            >\r\n                              Save\r\n                            </button>\r\n\r\n                            <button\r\n                              className={\"btn-secondary\"}\r\n                              style={{ marginLeft: 8 }}\r\n                              onClick={() => onCancel()}\r\n                            >\r\n                              Cancel\r\n                            </button>\r\n                          </React.Fragment>\r\n                        ) : (\r\n                          <button\r\n                            className={\"btn-primary\"}\r\n                            onClick={() =>\r\n                              onEdit({\r\n                                id: item.id,\r\n                                currentName: item.name,\r\n                                currentEmail: item.email,\r\n                                currentUsername: item.username,\r\n                                currentWebsite: item.website,\r\n                              })\r\n                            }\r\n                          >\r\n                            Edit\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                    {inExpandMode.status && inExpandMode.rowKey === item.id ? (\r\n                      <tr onClick={(id) => toggleRow(id)} key={item.id}>\r\n                        <td>\r\n                          <div>1</div>\r\n                        </td>\r\n                        <td>\r\n                          <div>Tim Saudhe</div>\r\n                        </td>\r\n                        <td>\r\n                          <div>tim@yahoo.com</div>\r\n                        </td>\r\n                        <td>\r\n                          <div>tim</div>\r\n                        </td>\r\n                        <td>\r\n                          <div>team.org.in</div>\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}