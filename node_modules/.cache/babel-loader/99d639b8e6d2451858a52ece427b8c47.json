{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATM\\\\Desktop\\\\Dash\\\\src\\\\components\\\\ReactTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useExpanded } from \"react-table\";\nimport makeData from \"./markData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n_c = Styles;\n\nfunction Table(_ref) {\n  _s();\n\n  let {\n    columns: userColumns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: {\n      expanded\n    }\n  } = useTable({\n    columns: userColumns,\n    data\n  }, useExpanded // Use the useExpanded plugin hook\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Showing the first 20 results of \", rows.length, \" rows\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: JSON.stringify({\n          expanded: expanded\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"yCItnrdQUz43tm3/vsVMVXsmyu8=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nfunction ReactTable() {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    // Build our expander column\n    id: \"expander\",\n    // Make sure it has an ID\n    Header: _ref2 => {\n      let {\n        getToggleAllRowsExpandedProps,\n        isAllRowsExpanded\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"span\", { ...getToggleAllRowsExpandedProps(),\n        children: isAllRowsExpanded ? \"ðŸ‘‡\" : \"ðŸ‘‰\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this);\n    },\n    Cell: _ref3 => {\n      let {\n        row\n      } = _ref3;\n      return (// Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n        // to build the toggle for expanding a row\n        row.canExpand ? /*#__PURE__*/_jsxDEV(\"span\", { ...row.getToggleRowExpandedProps({\n            style: {\n              // We can even use the row.depth property\n              // and paddingLeft to indicate the depth\n              // of the row\n              paddingLeft: `${row.depth * 2}rem`\n            }\n          }),\n          children: row.isExpanded ? \"ðŸ‘‡\" : \"ðŸ‘‰\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : null\n      );\n    }\n  }, {\n    Header: \"Name\",\n    columns: [{\n      Header: \"First Name\",\n      accessor: \"firstName\"\n    }, {\n      Header: \"Last Name\",\n      accessor: \"lastName\"\n    }]\n  }, {\n    Header: \"Info\",\n    columns: [{\n      Header: \"Age\",\n      accessor: \"age\"\n    }, {\n      Header: \"Visits\",\n      accessor: \"visits\"\n    }, {\n      Header: \"Status\",\n      accessor: \"status\"\n    }, {\n      Header: \"Profile Progress\",\n      accessor: \"progress\"\n    }]\n  }], []);\n  const data = React.useMemo(() => makeData(5, 5, 5), []);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ReactTable, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c3 = ReactTable;\nexport default ReactTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Table\");\n$RefreshReg$(_c3, \"ReactTable\");","map":{"version":3,"sources":["C:/Users/ATM/Desktop/Dash/src/components/ReactTable.js"],"names":["React","styled","useTable","useExpanded","makeData","Styles","div","Table","columns","userColumns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","expanded","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","length","JSON","stringify","ReactTable","useMemo","id","Header","getToggleAllRowsExpandedProps","isAllRowsExpanded","Cell","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","accessor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTable, useExpanded } from \"react-table\";\r\nimport makeData from \"./markData\";\r\n\r\n\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Table({ columns: userColumns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state: { expanded }\r\n  } = useTable(\r\n    {\r\n      columns: userColumns,\r\n      data\r\n    },\r\n    useExpanded // Use the useExpanded plugin hook\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <br />\r\n      <div>Showing the first 20 results of {rows.length} rows</div>\r\n      <pre>\r\n        <code>{JSON.stringify({ expanded: expanded }, null, 2)}</code>\r\n      </pre>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ReactTable() {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        // Build our expander column\r\n        id: \"expander\", // Make sure it has an ID\r\n        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\r\n          <span {...getToggleAllRowsExpandedProps()}>\r\n            {isAllRowsExpanded ? \"ðŸ‘‡\" : \"ðŸ‘‰\"}\r\n          </span>\r\n        ),\r\n        Cell: ({ row }) =>\r\n          // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\r\n          // to build the toggle for expanding a row\r\n          row.canExpand ? (\r\n            <span\r\n              {...row.getToggleRowExpandedProps({\r\n                style: {\r\n                  // We can even use the row.depth property\r\n                  // and paddingLeft to indicate the depth\r\n                  // of the row\r\n                  paddingLeft: `${row.depth * 2}rem`\r\n                }\r\n              })}\r\n            >\r\n              {row.isExpanded ? \"ðŸ‘‡\" : \"ðŸ‘‰\"}\r\n            </span>\r\n          ) : null\r\n      },\r\n      {\r\n        Header: \"Name\",\r\n        columns: [\r\n          {\r\n            Header: \"First Name\",\r\n            accessor: \"firstName\"\r\n          },\r\n          {\r\n            Header: \"Last Name\",\r\n            accessor: \"lastName\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        Header: \"Info\",\r\n        columns: [\r\n          {\r\n            Header: \"Age\",\r\n            accessor: \"age\"\r\n          },\r\n          {\r\n            Header: \"Visits\",\r\n            accessor: \"visits\"\r\n          },\r\n          {\r\n            Header: \"Status\",\r\n            accessor: \"status\"\r\n          },\r\n          {\r\n            Header: \"Profile Progress\",\r\n            accessor: \"progress\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    []\r\n  );\r\n\r\n  const data = React.useMemo(() => makeData(5, 5, 5), []);\r\n\r\n  return (\r\n    <Styles>\r\n      <Table columns={columns} data={data} />\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default ReactTable;\r\n"]},"metadata":{},"sourceType":"module"}