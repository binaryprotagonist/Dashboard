{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomFromArray = randomFromArray;\nexports.randomNumber = randomNumber;\n/**\n * Picks a random value from an array\n * @param {array} arr - The array to pick from\n * @returns {any} The value at the random key\n */\n\nfunction randomFromArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n/**\n * Generates a random number and returns as string to prevent limits\n * @param {int} size - The number of digits to return\n * @returns {string} The generated random number (in string format)\n */\n\n\nfunction randomNumber(size) {\n  if (!size || size <= 0) {\n    throw new Error('random number size must be above 0!');\n  }\n\n  var number = '';\n\n  for (var i = 0; i < size; i++) {\n    var rand = void 0;\n\n    if (i === 0) {\n      /* prevents the first number from being 0 */\n      rand = Math.floor(Math.random() * 9 + 1);\n    } else {\n      rand = Math.floor(Math.random() * 10);\n    }\n\n    number += String(rand);\n  }\n\n  return number;\n}","map":{"version":3,"sources":["C:/Users/ATM/Desktop/Dash/node_modules/namor/dist/random.js"],"names":["Object","defineProperty","exports","value","randomFromArray","randomNumber","arr","Math","floor","random","length","size","Error","number","i","rand","String"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,YAAR,GAAuBA,YAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASD,eAAT,CAAyBE,GAAzB,EAA8B;AAC5B,SAAOA,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAAG,CAACI,MAA/B,CAAD,CAAV;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASL,YAAT,CAAsBM,IAAtB,EAA4B;AAC1B,MAAI,CAACA,IAAD,IAASA,IAAI,IAAI,CAArB,EAAwB;AACtB,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAApB,EAA0BG,CAAC,EAA3B,EAA+B;AAC7B,QAAIC,IAAI,GAAG,KAAK,CAAhB;;AAEA,QAAID,CAAC,KAAK,CAAV,EAAa;AACX;AACAC,MAAAA,IAAI,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAP;AACD,KAHD,MAGO;AACLM,MAAAA,IAAI,GAAGR,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAP;AACD;;AAEDI,IAAAA,MAAM,IAAIG,MAAM,CAACD,IAAD,CAAhB;AACD;;AAED,SAAOF,MAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomFromArray = randomFromArray;\nexports.randomNumber = randomNumber;\n\n/**\n * Picks a random value from an array\n * @param {array} arr - The array to pick from\n * @returns {any} The value at the random key\n */\nfunction randomFromArray(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n/**\n * Generates a random number and returns as string to prevent limits\n * @param {int} size - The number of digits to return\n * @returns {string} The generated random number (in string format)\n */\n\n\nfunction randomNumber(size) {\n  if (!size || size <= 0) {\n    throw new Error('random number size must be above 0!');\n  }\n\n  var number = '';\n\n  for (var i = 0; i < size; i++) {\n    var rand = void 0;\n\n    if (i === 0) {\n      /* prevents the first number from being 0 */\n      rand = Math.floor(Math.random() * 9 + 1);\n    } else {\n      rand = Math.floor(Math.random() * 10);\n    }\n\n    number += String(rand);\n  }\n\n  return number;\n}"]},"metadata":{},"sourceType":"script"}