{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ATM\\\\Desktop\\\\Dash\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport jsonData from '../db/db.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myData = JSON.parse(JSON.stringify(jsonData));\n\nconst Dashboard = () => {\n  _s();\n\n  const [allRecords, setAllRecords] = useState([]);\n  const [data, setData] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n\n  const fetchInventory = () => {\n    console.log(myData);\n    setAllRecords(myData.posts);\n    setData(myData.posts);\n  };\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n  const [inEditMode, setInEditMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  const [inExpandMode, setInExpandMode] = useState({\n    status: false,\n    rowKey: null\n  });\n  useEffect(() => {\n    console.log(name); // setData(allRecords)\n  }, [name]);\n\n  const sortData = () => {\n    let sorteddata = data.sort((a, b) => a.name > b.name ? 1 : -1);\n    console.log(\"sort................\");\n    setAllRecords(sorteddata);\n    setData(sorteddata);\n    setName('abc');\n  };\n  /**\r\n   *\r\n   * @param id - The id of the website\r\n   * @param  currentName - the current name of website\r\n   * @param currentEmail - the current email of website\r\n   * @param currentUsername - the current username of website\r\n   * @param currentWebsite - The current webaddress of the website\r\n   */\n\n\n  const onEdit = _ref => {\n    let {\n      id,\n      currentName,\n      currentEmail,\n      currentUsername,\n      currentWebsite\n    } = _ref;\n    setInEditMode({\n      status: true,\n      rowKey: id\n    });\n    setName(currentName);\n    setEmail(currentEmail);\n    setUsername(currentUsername);\n    setWebsite(currentWebsite);\n  };\n\n  const toggleRow = id => {\n    setInExpandMode({\n      status: true,\n      rowKey: id\n    });\n  };\n  /**\r\n   *\r\n   * @param id\r\n   * @param newName\r\n   * @param newEmail\r\n   * @param newUsername\r\n   * @param newWebsite\r\n   \r\n   */\n\n\n  const updateInventory = _ref2 => {\n    let {\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    } = _ref2;\n    const updatedReports = allRecords.map(el => {\n      if (el.id === id) {\n        return { ...el,\n          name: newName,\n          email: newEmail,\n          username: newUsername,\n          website: newWebsite\n        };\n      }\n\n      return el;\n    });\n    setAllRecords(updatedReports);\n    setData(updatedReports);\n    setInEditMode({\n      status: false,\n      rowKey: id\n    });\n    console.log(updatedReports);\n  };\n  /**\r\n   *\r\n   * @param id -The id of the website\r\n   * @param newName - The new name  of the website\r\n   * @param newEmail - The new email  of the website\r\n   * @param newUsername - The new username  of the website\r\n   * @param newWebsite - The new webaddress  of the website\r\n   */\n\n\n  const onSave = _ref3 => {\n    let {\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    } = _ref3;\n    updateInventory({\n      id,\n      newName,\n      newEmail,\n      newUsername,\n      newWebsite\n    });\n  };\n\n  const onCancel = () => {\n    // reset the inEditMode state value\n    setInEditMode({\n      status: false,\n      rowKey: null\n    }); // reset the  state value\n\n    setName(null);\n    setEmail(null);\n    setUsername(null);\n    setWebsite(null);\n  };\n\n  const loadData = type => {\n    let tableData = [];\n\n    if (type === 'all') {\n      tableData = allRecords.filter(data => data.type === \"application\" || data.type === \"vendor\");\n    } else if (type === 'app') {\n      tableData = allRecords.filter(data => data.type === \"application\");\n    } else if (type === 'vendor') {\n      tableData = allRecords.filter(data => data.type === \"vendor\");\n    }\n\n    setData(tableData);\n  }; // const sortTypes = {\n  //   up: {\n  //     class: 'sort-up',\n  //     fn: (a, b) => a.name - b.name\n  //   },\n  //   down: {\n  //     class: 'sort-down',\n  //     fn: (a, b) => b.name - a.name\n  //   },\n  //   default: {\n  //     class: 'sort',\n  //     fn: (a, b) => a\n  //   }\n  // }\n  // onSortChange = () => {\n  //   const { currentSort } = this.state;\n  //   let nextSort;\n  //   if(currentSort === 'down') nextSort = 'up';\n  //   else if(currentSort === 'up') nextSort = 'default';\n  //   else if(currentSort === 'default') nextSort = 'down';\n  //   this.setState({\n  //     currentSort: nextSort\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col main mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12 col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-3 mb-3 text-secondary\",\n          children: \"All Records of Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            loadData(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"app\",\n            children: \"Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"vendor\",\n            children: \"Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sortData,\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"thead-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  onClick: () => sortData(),\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Comapny Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => toggleRow(item.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: name,\n                      onChange: event => setName(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this) : item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\" \", inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: email,\n                      onChange: event => setEmail(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 25\n                    }, this) : item.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: username,\n                      onChange: event => setUsername(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this) : item.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      value: website,\n                      onChange: event => setWebsite(event.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 25\n                    }, this) : item.website\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: inEditMode.status && inEditMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn-success\",\n                        onClick: () => onSave({\n                          id: item.id,\n                          newName: name,\n                          newEmail: email,\n                          newUsername: username,\n                          newWebsite: website\n                        }),\n                        children: \"Save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn-secondary\",\n                        style: {\n                          marginLeft: 8\n                        },\n                        onClick: () => onCancel(),\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn-primary\",\n                      onClick: () => onEdit({\n                        id: item.id,\n                        currentName: item.name,\n                        currentEmail: item.email,\n                        currentUsername: item.username,\n                        currentWebsite: item.website\n                      }),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this), inExpandMode.status && inExpandMode.rowKey === item.id ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                  onClick: () => toggleRow(item.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"HI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 27\n                  }, this)]\n                }, item.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 25\n                }, this) : '']\n              }, item.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"m/rZhO006vseI4OdPhJ1LR2E4g4=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/ATM/Desktop/Dash/src/components/Dashboard.js"],"names":["React","useEffect","useState","jsonData","myData","JSON","parse","stringify","Dashboard","allRecords","setAllRecords","data","setData","name","setName","email","setEmail","username","setUsername","website","setWebsite","fetchInventory","console","log","posts","inEditMode","setInEditMode","status","rowKey","inExpandMode","setInExpandMode","sortData","sorteddata","sort","a","b","onEdit","id","currentName","currentEmail","currentUsername","currentWebsite","toggleRow","updateInventory","newName","newEmail","newUsername","newWebsite","updatedReports","map","el","onSave","onCancel","loadData","type","tableData","filter","e","target","value","item","event","marginLeft"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport jsonData from '../db/db.json';\r\n\r\nconst myData = JSON.parse(JSON.stringify(jsonData));\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [allRecords,  setAllRecords] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [website, setWebsite] = useState(\"\");\r\n\r\n  const fetchInventory = () => {\r\n    console.log(myData);\r\n    setAllRecords(myData.posts);\r\n    setData(myData.posts);\r\n  };  \r\n\r\n  useEffect(() => {\r\n    fetchInventory();\r\n  }, []);\r\n\r\n  const [inEditMode, setInEditMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n  const [inExpandMode, setInExpandMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(name);\r\n    // setData(allRecords)\r\n  }, [name])\r\n  \r\n  const sortData = () => {\r\n    let sorteddata = data.sort((a, b) =>  (a.name > b.name) ? 1 : -1)\r\n    console.log(\"sort................\",)\r\n    setAllRecords(sorteddata)   \r\n    setData(sorteddata)   \r\n    setName('abc')\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id - The id of the website\r\n   * @param  currentName - the current name of website\r\n   * @param currentEmail - the current email of website\r\n   * @param currentUsername - the current username of website\r\n   * @param currentWebsite - The current webaddress of the website\r\n   */\r\n  const onEdit = ({\r\n    id,\r\n    currentName,\r\n    currentEmail,\r\n    currentUsername,\r\n    currentWebsite,\r\n  }) => {\r\n    setInEditMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n    setName(currentName);\r\n    setEmail(currentEmail);\r\n    setUsername(currentUsername);\r\n    setWebsite(currentWebsite);\r\n  };\r\n\r\n  const toggleRow = (id) => {\r\n    setInExpandMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id\r\n   * @param newName\r\n   * @param newEmail\r\n   * @param newUsername\r\n   * @param newWebsite\r\n   \r\n   */\r\n  const updateInventory = ({\r\n    id,\r\n    newName,\r\n    newEmail,\r\n    newUsername,\r\n    newWebsite,\r\n  }) => {\r\n    const updatedReports = allRecords.map(el => {\r\n      if(el.id === id) {\r\n        return {\r\n          ...el,\r\n          name: newName,\r\n          email: newEmail,\r\n          username: newUsername,\r\n          website: newWebsite \r\n        }\r\n      }\r\n      return el;\r\n    })\r\n\r\n    setAllRecords(updatedReports);\r\n    setData(updatedReports)\r\n    setInEditMode({\r\n      status: false,\r\n      rowKey: id\r\n    })\r\n    console.log(updatedReports);\r\n\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param id -The id of the website\r\n   * @param newName - The new name  of the website\r\n   * @param newEmail - The new email  of the website\r\n   * @param newUsername - The new username  of the website\r\n   * @param newWebsite - The new webaddress  of the website\r\n   */\r\n  const onSave = ({ id, newName, newEmail, newUsername, newWebsite }) => {\r\n    updateInventory({ id, newName, newEmail, newUsername, newWebsite });\r\n  };\r\n\r\n  const onCancel = () => {\r\n    // reset the inEditMode state value\r\n    setInEditMode({\r\n      status: false,\r\n      rowKey: null,\r\n    });\r\n    // reset the  state value\r\n    setName(null);\r\n    setEmail(null);\r\n    setUsername(null);\r\n    setWebsite(null);\r\n  };\r\n\r\nconst loadData = (type) => {\r\n  let tableData = [];\r\n  if (type === 'all') {\r\n    tableData =  allRecords.filter((data) => data.type === \"application\" || data.type === \"vendor\") \r\n  } else if (type === 'app') {\r\n    tableData =  allRecords.filter((data) => data.type === \"application\")     \r\n  } else if (type === 'vendor') {\r\n    tableData =  allRecords.filter((data) => data.type === \"vendor\")     \r\n  }\r\n  setData(tableData);\r\n}\r\n// const sortTypes = {\r\n//   up: {\r\n//     class: 'sort-up',\r\n//     fn: (a, b) => a.name - b.name\r\n//   },\r\n//   down: {\r\n//     class: 'sort-down',\r\n//     fn: (a, b) => b.name - a.name\r\n//   },\r\n//   default: {\r\n//     class: 'sort',\r\n//     fn: (a, b) => a\r\n//   }\r\n// }\r\n// onSortChange = () => {\r\n//   const { currentSort } = this.state;\r\n//   let nextSort;\r\n  \r\n//   if(currentSort === 'down') nextSort = 'up';\r\n//   else if(currentSort === 'up') nextSort = 'default';\r\n//   else if(currentSort === 'default') nextSort = 'down';\r\n  \r\n//   this.setState({\r\n//     currentSort: nextSort\r\n//   })\r\n// }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"col main mt-3\">\r\n\r\n      <div className=\"row \">\r\n    \r\n\r\n        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n          <h5 className=\"mt-3 mb-3 text-secondary\">All Records of Employees</h5>\r\n          <select onChange={(e) => { loadData(e.target.value) }}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"app\">Application</option>\r\n            <option value=\"vendor\">Vendor</option>\r\n          </select>\r\n          <button onClick={sortData}>Sort</button>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-striped\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>No</th>\r\n                  <th onClick={()=>sortData()}>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Username</th>\r\n                  <th>Comapny Name</th>\r\n                  <th>Edit</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((item) => (\r\n                  <React.Fragment key={item.name}>\r\n                    <tr onClick={() => toggleRow(item.id)} >\r\n                    <td>{item.id}</td>\r\n                    <td>\r\n                      {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                        <input\r\n                          value={name}\r\n                          onChange={(event) => setName(event.target.value)}\r\n                        />\r\n                      ) : (\r\n                        item.name\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {\" \"}\r\n                      {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                        <input\r\n                          value={email}\r\n                          onChange={(event) => setEmail(event.target.value)}\r\n                        />\r\n                      ) : (\r\n                        item.email\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                        <input\r\n                          value={username}\r\n                          onChange={(event) => setUsername(event.target.value)}\r\n                        />\r\n                      ) : (\r\n                        item.username\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                        <input\r\n                          value={website}\r\n                          onChange={(event) => setWebsite(event.target.value)}\r\n                        />\r\n                      ) : (\r\n                        item.website\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {inEditMode.status && inEditMode.rowKey === item.id ? (\r\n                        <React.Fragment>\r\n                          <button\r\n                            className={\"btn-success\"}\r\n                            onClick={() =>\r\n                              onSave({\r\n                                id: item.id,\r\n                                newName: name,\r\n                                newEmail: email,\r\n                                newUsername: username,\r\n                                newWebsite: website,\r\n                              })\r\n                            }\r\n                          >\r\n                            Save\r\n                          </button>\r\n\r\n                          <button\r\n                            className={\"btn-secondary\"}\r\n                            style={{ marginLeft: 8 }}\r\n                            onClick={() => onCancel()}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </React.Fragment>\r\n                      ) : (\r\n                        <button\r\n                          className={\"btn-primary\"}\r\n                          onClick={() =>\r\n                            onEdit({\r\n                              id: item.id,\r\n                              currentName: item.name,\r\n                              currentEmail: item.email,\r\n                              currentUsername: item.username,\r\n                              currentWebsite: item.website,\r\n                            })\r\n                          }\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                    </tr>\r\n                    {\r\n                      inExpandMode.status && inExpandMode.rowKey === item.id ? (\r\n                        <tr onClick={() => toggleRow(item.id)} key={item.name}>\r\n                          <td>\r\n                            <div>1</div>\r\n                            <div>2</div>\r\n                            <div>3</div>\r\n                            <div>4</div>\r\n                          </td>\r\n                          <td>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                          </td>\r\n                          <td>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                          </td>\r\n                          <td>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                          </td>\r\n                          <td>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                            <div>HI</div>\r\n                          </td>\r\n                          \r\n                        </tr>\r\n                      ) : ''\r\n                    }\r\n                  </React.Fragment>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}